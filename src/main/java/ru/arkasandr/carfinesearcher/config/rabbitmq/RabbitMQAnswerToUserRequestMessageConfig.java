package ru.arkasandr.carfinesearcher.config.rabbitmq;import lombok.RequiredArgsConstructor;import org.springframework.amqp.core.Queue;import org.springframework.amqp.rabbit.connection.ConnectionFactory;import org.springframework.amqp.rabbit.core.RabbitTemplate;import org.springframework.amqp.support.converter.MessageConverter;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.integration.annotation.IntegrationComponentScan;import org.springframework.integration.config.EnableIntegration;@Configuration@RequiredArgsConstructor@IntegrationComponentScan@EnableIntegrationpublic class RabbitMQAnswerToUserRequestMessageConfig {    @Value("${spring.rabbitmq.queue_answer}")    private String queue;    @Value("${spring.rabbitmq.exchange_answer}")    private String exchange;    @Value("${spring.rabbitmq.routingkey_answer}")    private String routingKey;    private final ConnectionFactory connectionFactory;    private final MessageConverter jsonMessageConverter;    @Bean    public RabbitTemplate answerToUserTemplate() {        RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);        rabbitTemplate.setExchange(exchange);        rabbitTemplate.setRoutingKey(routingKey);        rabbitTemplate.setConnectionFactory(connectionFactory);        rabbitTemplate.setMessageConverter(jsonMessageConverter);        return rabbitTemplate;    }    @Bean    Queue answerToUserRequest() {        return new Queue(queue, true);    }}