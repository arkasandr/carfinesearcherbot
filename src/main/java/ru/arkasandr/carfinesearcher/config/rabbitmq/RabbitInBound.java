package ru.arkasandr.carfinesearcher.config.rabbitmq;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.amqp.rabbit.connection.ConnectionFactory;import org.springframework.amqp.rabbit.core.RabbitTemplate;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.integration.amqp.dsl.Amqp;import org.springframework.integration.annotation.IntegrationComponentScan;import org.springframework.integration.dsl.IntegrationFlow;import org.springframework.integration.dsl.IntegrationFlows;import ru.arkasandr.carfinesearcher.service.message.MessageGateway;@Slf4j@Configuration@RequiredArgsConstructor@IntegrationComponentScan(basePackageClasses = MessageGateway.class)public class RabbitInBound {    private final RabbitMQRequestMessageConfig rabbitMQRequestMessageConfig;    private final RabbitTemplate rabbitTemplate;//    private final RabbitMQResponseMessageConfig rabbitServerConfig;////    private final RabbitMQStatusMessageConfig rabbitStatusConfig;    private final ConnectionFactory connectionFactory;    @Bean    public IntegrationFlow outboundFlow() {        return IntegrationFlows.from("clientChannel")                .log()                .handle(Amqp.outboundAdapter(rabbitTemplate))                .get();    }//    @Bean//    public IntegrationFlow inboundFlowGetStatus() {//        return IntegrationFlows.from(//                Amqp.inboundAdapter(rabbitStatusConfig.statusWorkListenerContainer()))//                .log()//                .handle("messageService", "getRequestStatus")//                .get();//    }////    @Bean//    public IntegrationFlow inboundFlow() {//        return IntegrationFlows.from(//                Amqp.inboundAdapter(rabbitServerConfig.workListenerContainer()))//                .log()//                .handle("messageService", "getResponseFromQueue")//                .get();//    }}