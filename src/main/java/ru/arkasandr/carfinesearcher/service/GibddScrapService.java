package ru.arkasandr.carfinesearcher.service;import com.microsoft.playwright.BrowserContext;import com.microsoft.playwright.Page;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Service;import ru.arkasandr.carfinesearcher.config.BrowserInitializeConfig;import ru.arkasandr.carfinesearcher.config.GibddInitializeConfig;import ru.arkasandr.carfinesearcher.model.Answer;import ru.arkasandr.carfinesearcher.model.UserData;@Service@Slf4j@RequiredArgsConstructorpublic class GibddScrapService {    private static final Integer WAIT_BUTTON_TIMEOUT = 5000;    private static final Integer WAIT_SEARCH_RESULT_TIMEOUT = 10000;    private static final Integer START_REG_NUM_INDEX = 0;    private static final Integer END_REG_NUM_INDEX = 6;    private static final String ANSWER_EXCEPTION = "Произошел сбой, повторите запрос позднее";    @Value("${gibdd.fines.url}")    private String fineUrl;    private final GibddInitializeConfig gibddInitializeConfig;    private final BrowserInitializeConfig browserInitialize;    public Answer scrap(UserData data) {        var regNumber = data.getRegNumber().substring(START_REG_NUM_INDEX, END_REG_NUM_INDEX);        var regReg = data.getRegNumber().substring(END_REG_NUM_INDEX);        var certNumber = data.getCertNumber();        BrowserContext context = gibddInitializeConfig.getContext();        Page page = browserInitialize.page(context);        Answer result = new Answer();        try {            log.info("Start scraping process with regNumber: {} and certNumber: {} ", data.getRegNumber(), data.getCertNumber());            page.navigate(fineUrl);            page.waitForSelector(".checkFinesRegnum", new Page.WaitForSelectorOptions().setTimeout(20000));            page.click("#checkFinesRegnum");            page.type("#checkFinesRegnum", regNumber);            page.click("#checkFinesRegreg");            page.type("#checkFinesRegreg", regReg);            page.click("#checkFinesStsnum");            page.type("#checkFinesStsnum", certNumber);            page.waitForTimeout(WAIT_BUTTON_TIMEOUT);            page.click("text = запросить проверку");            page.waitForTimeout(WAIT_SEARCH_RESULT_TIMEOUT);            var checkingInfo = page.querySelectorAll("#checkFinesSheet > p").get(0).innerText();            var checkingDate = page.querySelectorAll("#checkFinesSheet > p").get(1).innerText();            var checkingMessage = page.querySelectorAll("#checkFines > p > p").get(0).innerText();            log.info("Результаты проверки: \n "                    + "- {};\n"                    + "- {};\n"                    + "- {};", checkingInfo, checkingDate, checkingMessage);            result = Answer.builder()                    .checkingInfo(checkingInfo)                    .checkingDate(checkingDate)                    .checkingMessage(checkingMessage)                    .build();        } catch (Exception e) {            log.info("GibddScrapService error: {}", e.getMessage());            result = Answer.builder()                    .checkingMessage(ANSWER_EXCEPTION)                    .build();        } finally {            context.browser().close();            log.info("Browser closed");        }        return result;    }}