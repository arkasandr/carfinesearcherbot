package ru.arkasandr.carfinesearcher.service.message;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.messaging.support.MessageBuilder;import org.springframework.stereotype.Service;import ru.arkasandr.carfinesearcher.model.Car;import ru.arkasandr.carfinesearcher.service.message.dto.GibddRequestMessageDto;@RequiredArgsConstructor@Service@Slf4jpublic class MessageService {    private final MessageGateway gateway;    /**     * Метод отправляет запрос на получение данных в очередь     */    public void sendMessageToQueue(Car car) {        var request = car.getRequest().stream()                .findFirst()                .orElseThrow(() -> new IllegalArgumentException("Запрос должен быть найден!"));        var dto = GibddRequestMessageDto.builder()                .registrationNumber(car.getRegistrationNumber())                .certificateNumber(car.getCertificateNumber())                .uuid(request.getId())                .build();        var message = MessageBuilder.withPayload(dto)                .build();        gateway.send(message);        log.info("Request message with UUID = {} was sent to queue", request.getId());    }}